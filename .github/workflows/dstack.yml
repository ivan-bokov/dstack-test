name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  runner-test-master:
    defaults:
      run:
        working-directory: runner
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17

    - name: Test
      run: |
            go version
            go fmt $(go list ./... | grep -v /vendor/)
            go vet $(go list ./... | grep -v /vendor/)
            go test -race $(go list ./... | grep -v /vendor/)
        
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.29
        args: --issues-exit-code=0
  runner-compile-master:
    defaults:
      run:
        working-directory: runner
    env:
      REPO_NAME: github.com/dstackai/dstack
    strategy:
      matrix:
        include:
          - {goos: "linux", goarch: "386", runson: "ubuntu-latest"}
          - {goos: "linux", goarch: "amd64", runson: "ubuntu-latest"}
          - {goos: "windows", goarch: "386", runson: "ubuntu-latest"}
          - {goos: "windows", goarch: "amd64", runson: "ubuntu-latest"}
          - {goos: "darwin", goarch: "amd64", runson: "macos-latest"}
          - {goos: "darwin", goarch: "arm64", runson: "macos-latest"}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        ACTIONSOS: ${{ matrix.runson }}
      run: |
            go build -ldflags "-X '${REPO_NAME}/runner/version.Version=${{ github.run_number }}' -X '${REPO_NAME}/runner/pkg/log.CloudLog=true' -extldflags '-static'" -o dstack-runner-${{ matrix.goos }}-${{ matrix.goarch }}
    
    - uses: actions/upload-artifact@v2
      with:
        name: dstack-runner-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dstack-runner-${{ matrix.goos }}-${{ matrix.goarch }}
